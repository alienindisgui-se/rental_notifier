name: Hourly Rental Scraping

on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:      # Allow manual trigger

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Download previous listings
      id: download-artifact
      uses: actions/download-artifact@v4
      continue-on-error: true # Allow workflow to continue if no artifact is found (e.g., first run)
      with:
        name: listings
        github-token: ${{ secrets.GITHUB_TOKEN }} # Required for cross-run access
        workflow: Hourly Rental Scraping          # The name of your workflow
        branch: ${{ github.ref_name }}            # Explicitly target the current branch
        # Omit run-id - the action should find the latest run on the specified workflow+branch
        path: .                                   # Download to the current directory

    # Debugging steps - keep them for now to verify the download
    - name: List files after download
      run: ls -R

    - name: Check if listings.json exists
      run: |
        if [ -f listings.json ]; then
          echo "listings.json exists after download!"
        else
          echo "listings.json does NOT exist after download."
        fi

    - name: Initialize listings file # This step will now only run if the artifact download truly failed/found nothing
      run: |
        if [ ! -f listings.json ]; then
          echo "[]" > listings.json
          echo "Created empty listings.json file because no previous artifact was found." # Added logging
        else
          echo "Previous listings.json artifact found." # Updated logging
        fi


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 discord.py

    - name: Run scraper
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
      run: python main.py

    - name: Upload new listings
      uses: actions/upload-artifact@v4
      with:
        name: listings
        path: listings.json
        retention-days: 30
