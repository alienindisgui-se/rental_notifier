name: Hourly Rental Scraping

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Find latest successful workflow run
      id: find-run
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const workflowId = context.workflow;
          
          console.log(`Debug - Repository: ${owner}/${repo}`);
          console.log(`Debug - Workflow ID: ${workflowId}`);

          try {
            const listRunsResponse = await github.rest.actions.listWorkflowRunsForRepo({
              owner,
              repo,
              workflow_id: workflowId,
              status: 'success',
              per_page: 5,
              event: 'schedule,workflow_dispatch'
            });

            console.log(`Debug - Found ${listRunsResponse.data.total_count} workflow runs`);
            console.log(`Debug - Response data:`, JSON.stringify(listRunsResponse.data, null, 2));

            const latestSuccessfulRun = listRunsResponse.data.workflow_runs[0];
            if (latestSuccessfulRun) {
              console.log(`Found latest successful run: ID ${latestSuccessfulRun.id}`);
              core.setOutput('run_id', latestSuccessfulRun.id);
            } else {
              console.log('No successful runs found');
              core.setOutput('run_id', '');
            }
          } catch (error) {
            console.error('Error finding latest successful run:', error);
            core.setOutput('run_id', '');
          }

    - name: Download previous listings artifact
      id: download-artifact
      uses: actions/download-artifact@v4
      continue-on-error: true
      if: steps.find-run.outputs.run_id != ''
      with:
        name: listings
        path: .
        run-id: ${{ steps.find-run.outputs.run_id }}

    - name: Initialize listings file if not downloaded
      if: steps.find-run.outputs.run_id == '' || steps.download-artifact.outcome != 'success'
      run: |
        echo "[]" > listings.json
        echo "Initialized new empty listings.json file because previous artifact was not downloaded."

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 discord.py

    - name: Run scraper
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
      run: python main.py

    - name: Upload new listings artifact
      uses: actions/upload-artifact@v4
      with:
        name: listings
        path: listings.json
        retention-days: 30