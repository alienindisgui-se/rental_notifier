name: Hourly Rental Scraping

on:
  schedule:
    - cron: '0 4-17 * * *'
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Find previous successful run with artifacts
      id: find_artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          
          try {
            // Get list of workflow runs
            const workflowPath = '.github/workflows/hourly_scrape.yml';
            const runs = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: workflowPath,
              status: 'success',
              per_page: 5
            });

            // Get current run ID
            const currentRunId = context.runId;
            
            // Find previous successful run that has artifacts
            for (const run of runs.data.workflow_runs) {
              if (run.id.toString() === currentRunId.toString()) {
                continue;
              }

              // Check if run has artifacts
              const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                owner,
                repo,
                run_id: run.id
              });

              if (artifacts.data.artifacts.length > 0) {
                console.log(`Found run ${run.id} with ${artifacts.data.artifacts.length} artifacts`);
                core.setOutput('run_id', run.id.toString());
                return;
              }
            }

            console.log('No previous runs with artifacts found');
            core.setOutput('run_id', '');
          } catch (error) {
            console.error('Error finding artifacts:', error);
            core.setOutput('run_id', '');
          }

    - name: Download artifact
      id: download
      uses: actions/download-artifact@v4
      with:
        name: listings
        path: .
        repository: ${{ github.repository }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ steps.find_artifacts.outputs.run_id }}

    - name: Initialize empty file if no artifact
      if: steps.find_artifacts.outputs.run_id == ''
      run: |
        echo "[]" > listings.json
        echo "Initialized new empty listings.json file because no previous artifacts were found."

    - name: Verify artifact download
      if: steps.find_artifacts.outputs.run_id != ''
      run: |
        if [ ! -f "listings.json" ]; then
          echo "Error: listings.json was not downloaded successfully"
          exit 1
        fi
        echo "Successfully loaded previous listings.json"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 discord.py

    - name: Run scraper
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
      run: python main.py

    - name: Upload new listings artifact
      uses: actions/upload-artifact@v4
      with:
        name: listings
        path: listings.json
        retention-days: 30